# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Gradle Publish (on push)

on:
  push:
    branches: [ "main" ]

jobs:
  validate:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.extract_version.outputs.version }}
      paperVersion: ${{ steps.extract_version.outputs.paperVersion }}

    steps:
      - uses: actions/checkout@v5

      - name: Set up JDK 21
        uses: actions/setup-java@v5
        with:
          java-version: '21'
          distribution: 'temurin'
          server-id: github
          settings-path: ${{ github.workspace }}

      # Configure: https://github.com/gradle/actions/blob/main/setup-gradle/README.md
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@017a9effdb900e5b5b2fddfb590a105619dca3c3 # v4.4.2
        with:
          gradle-version: '9.0.0'

      - name: Build with Gradle (1.8.8)
        run: gradle build
        env:
          LUXIOUS_NEXUS_USER: ${{ secrets.MAVEN_NAME }}
          LUXIOUS_NEXUS_PASS: ${{ secrets.MAVEN_SECRET }}
          MC_SERVER_NEWEST_API: "false"

      - name: Build with Gradle (Latest Paper 1.21+)
        run: gradle build
        env:
          LUXIOUS_NEXUS_USER: ${{ secrets.MAVEN_NAME }}
          LUXIOUS_NEXUS_PASS: ${{ secrets.MAVEN_SECRET }}
          MC_SERVER_NEWEST_API: "true"

      - name: Extract Version from Gradle
        id: extract_version
        run: |
          gradle clean
          version=$(gradle properties -q | grep "^version:" | awk '{print $2}')
          echo "version=$version" >> $GITHUB_OUTPUT
          paperVersion=$(gradle printPaperVersion -q | tr -d '[:space:]')
          echo "paperVersion=$paperVersion" >> $GITHUB_OUTPUT

      - name: Display Version
        run: |
          echo "Version is ${{ steps.extract_version.outputs.version }}"
          echo "Paper Version is ${{ steps.extract_version.outputs.paperVersion }}"

  build:
    needs: validate
    runs-on: ubuntu-latest
    permissions:
      contents: write # Access to Publish a Release
      packages: write # Access to Publish a Package

    steps:
    - uses: actions/checkout@v5
    
    - name: Set up JDK 21
      uses: actions/setup-java@v5
      with:
        java-version: '21'
        distribution: 'temurin'
        server-id: github
        settings-path: ${{ github.workspace }}

      # Configure: https://github.com/gradle/actions/blob/main/setup-gradle/README.md
    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@017a9effdb900e5b5b2fddfb590a105619dca3c3 # v4.4.2
      with:
        gradle-version: '9.0.0'

    - name: Publish with Gradle
      if: "!endsWith(needs.setup.outputs.version, 'SNAPSHOT')"
      run: gradle publish
      env:
        LUXIOUS_NEXUS_USER: ${{ secrets.MAVEN_NAME }}
        LUXIOUS_NEXUS_PASS: ${{ secrets.MAVEN_SECRET }}

      #--------------------------------------------------------------------------------------------
      #           Update Version Badge
      #--------------------------------------------------------------------------------------------

      # Update the README.md Badge with the new version
    - name: Create Version Badge
      if: "!endsWith(needs.setup.outputs.version, 'SNAPSHOT')"
      uses: schneegans/dynamic-badges-action@v1.7.0
      with:
        auth: ${{ secrets.GIST_SECRET }}
        gistID: 25b97e226e0ecf38e0135223111fd115
        filename: version.json
        label: Latest Release
        message: "${{ needs.setup.outputs.version }}"
        color: blue

      # Update the README.md Badge with the new paper version
    - name: Create Paper NMS Version Badge
      if: "!endsWith(needs.setup.outputs.version, 'SNAPSHOT')"
      uses: schneegans/dynamic-badges-action@v1.7.0
      with:
        auth: ${{ secrets.GIST_SECRET }}
        gistID: 25b97e226e0ecf38e0135223111fd115
        filename: paperVersion.json
        label: Last NMS Update
        message: "${{ needs.setup.outputs.paperVersion }}"
        color: orange